{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAmCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA1CAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBACJ,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,cAAcC,SAElD,GAAIJ,EAAMK,MAAQ,GAAKJ,EAAKI,MAAQ,GAAKH,EAAOG,MAAQ,EACtDtB,EAAAuB,OAAOC,QAAQ,mCAAoC,CAC/CC,SAAO,SAGX,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAOG,MAAOI,IAAK,CACrC,IAAIC,EAAWD,EAAI,EACnB,MAAME,EAASC,OAAOZ,EAAMK,OAASJ,EAAKI,MAAQI,EAElDxB,EAAcyB,EAAUC,GACrBE,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAuB,OAAOQ,QAAQ,uBAAqB5B,QAAiBC,MAAW,CAC5DqB,SAAO,GACT,IAEHO,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAuB,OAAOU,QAAQ,sBAAoB9B,QAAeC,MAAW,CAC3DqB,SAAS,GACT,G,CAIVV,EAAIK,cAAcc,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n\n  if (delay.value < 0 || step.value < 0 || amount.value < 0) {\n    Notify.warning(`❗ Please enter a positive number`, {\n      useIcon: false,\n    });\n  } else {\n    for (let i = 0; i < amount.value; i++) {\n      let position = i + 1;\n      const delays = Number(delay.value) + step.value * i;\n\n      createPromise(position, delays)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n            useIcon: false,\n          });\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n            useIcon: false,\n          });\n        });\n    }\n  }\n  evt.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((fulfill, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        fulfill({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","fulfill","reject","setTimeout","document","querySelector","addEventListener","evt","preventDefault","delay1","step","amount","currentTarget","elements","value","Notify","warning","useIcon","i","position1","delays","Number","then","success","catch","failure","reset"],"version":3,"file":"03-promises.2181c4c8.js.map"}